===== E:\0other imp\SideProjects\blogging_project\React-MySQL-Blog-App\Client\public\index.html ===== 
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta
      name="description"
      content="Web site created using create-react-app"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;500;600;700;800&display=swap"
      rel="stylesheet"
    />
    <link rel="icon" type="image/x-icon" href="https://cdn.dribbble.com/users/3263437/screenshots/6590941/c_logo-04.jpg">

    <style>
      * {
        font-family: "Open Sans", sans-serif;
        margin: 0;
      }
    </style>
    <title>BlogSpot.</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
  </body>
</html>

===== E:\0other imp\SideProjects\blogging_project\React-MySQL-Blog-App\Client\src\index.css ===== 
@import url('https://fonts.googleapis.com/css2?family=Cutive+Mono&family=Poppins:wght@200;300;400;500;700&display=swap');
body{
    /* background-color: #1D1D1E; */
}
===== E:\0other imp\SideProjects\blogging_project\React-MySQL-Blog-App\Client\src\App.js ===== 
import {
  createBrowserRouter,
  Outlet,
  RouterProvider,
} from "react-router-dom";
import Register from "./Pages/Register.js"
import Login from "./Pages/Login.js"
import Single from "./Pages/Single.js"
import Home from "./Pages/Home.js"
import Navbar from "./Components/Navbar.js";
import Write from "./Pages/Write.js";
import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';

const Layout = ()=>{
  return (
    <>
    <Navbar/>
    <Outlet/>
    </>
  )
}

const router = createBrowserRouter([
  {
    path: "/",
    element: <Layout/>,
    children:[
      {
        path:"/",
        element:<Home/>
      },
      {
        path:"/post/:id",
        element:<Single/>
      },
      {
        path:"/write",
        element:<Write/>
      },
      {
        path: "/login",
        element: <Login/>,
      },
      {
        path: "/register",
        element: <Register/>,
      },
    ]
  },
  // {
  //   path: "/register",
  //   element: <Register/>,
  // },
  // {
  //   path: "/login",
  //   element: <Login/>,
  // },
  // {
  //   path: "/register",
  //   element: <Register/>,
  // },
]);


function App() {
  return (
    <div className="app" >
      <div className="container">
      <RouterProvider router={router} />
      </div>
    </div>
  );
}





export default App;

===== E:\0other imp\SideProjects\blogging_project\React-MySQL-Blog-App\Client\src\BlogsSample.js ===== 
module.exports = [
    {
            "image":"https://techwiser.com/wp-content/uploads/2023/03/Top-Ways-to-Fix-Samsung-Galaxy-Phones-Not-Sending-or-Receiving-Text-Messages.jpg",
            "titile":"10 Fixes for Samsung Galaxy Phones Not Sending or Receiving Text Messages",
            "author":"Pankil Shah",
            "date":"23 March 2022"            
    },
    
    {
        "image":"https://techwiser.com/wp-content/uploads/2023/03/Top-Ways-to-Fix-Samsung-Galaxy-Phones-Not-Sending-or-Receiving-Text-Messages.jpg",
        "titile":"10 Fixes for Samsung Galaxy Phones Not Sending or Receiving Text Messages",
        "author":"Pankil Shah",
        "date":"23 March 2022"            
},
{
    "image":"https://techwiser.com/wp-content/uploads/2023/03/Top-Ways-to-Fix-Samsung-Galaxy-Phones-Not-Sending-or-Receiving-Text-Messages.jpg",
    "titile":"10 Fixes for Samsung Galaxy Phones Not Sending or Receiving Text Messages",
    "author":"Pankil Shah",
    "date":"23 March 2022"            
},
{
    "image":"https://techwiser.com/wp-content/uploads/2023/03/Top-Ways-to-Fix-Samsung-Galaxy-Phones-Not-Sending-or-Receiving-Text-Messages.jpg",
    "titile":"10 Fixes for Samsung Galaxy Phones Not Sending or Receiving Text Messages",
    "author":"Pankil Shah",
    "date":"23 March 2022"            
},
{
    "image":"https://techwiser.com/wp-content/uploads/2023/03/Top-Ways-to-Fix-Samsung-Galaxy-Phones-Not-Sending-or-Receiving-Text-Messages.jpg",
    "titile":"10 Fixes for Samsung Galaxy Phones Not Sending or Receiving Text Messages",
    "author":"Pankil Shah",
    "date":"23 March 2022"            
},
{
    "image":"https://techwiser.com/wp-content/uploads/2023/03/Top-Ways-to-Fix-Samsung-Galaxy-Phones-Not-Sending-or-Receiving-Text-Messages.jpg",
    "titile":"10 Fixes for Samsung Galaxy Phones Not Sending or Receiving Text Messages",
    "author":"Pankil Shah",
    "date":"23 March 2022"            
},
{
    "image":"https://techwiser.com/wp-content/uploads/2023/03/Top-Ways-to-Fix-Samsung-Galaxy-Phones-Not-Sending-or-Receiving-Text-Messages.jpg",
    "titile":"10 Fixes for Samsung Galaxy Phones Not Sending or Receiving Text Messages",
    "author":"Pankil Shah",
    "date":"23 March 2022"            
},
{
    "image":"https://techwiser.com/wp-content/uploads/2023/03/Top-Ways-to-Fix-Samsung-Galaxy-Phones-Not-Sending-or-Receiving-Text-Messages.jpg",
    "titile":"10 Fixes for Samsung Galaxy Phones Not Sending or Receiving Text Messages",
    "author":"Pankil Shah",
    "date":"23 March 2022"            
},
{
    "image":"https://techwiser.com/wp-content/uploads/2023/03/Top-Ways-to-Fix-Samsung-Galaxy-Phones-Not-Sending-or-Receiving-Text-Messages.jpg",
    "titile":"10 Fixes for Samsung Galaxy Phones Not Sending or Receiving Text Messages",
    "author":"Pankil Shah",
    "date":"23 March 2022"            
},


]
===== E:\0other imp\SideProjects\blogging_project\React-MySQL-Blog-App\Client\src\index.js ===== 
import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';
import { AuthContextProvider } from './Context/AuthContext';
import "./index.css"
const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <AuthContextProvider>
    <App />

    </AuthContextProvider>
  </React.StrictMode>
);

===== E:\0other imp\SideProjects\blogging_project\React-MySQL-Blog-App\Client\src\Components\Navbar.js ===== 
import * as React from "react";
import AppBar from "@mui/material/AppBar";
import Box from "@mui/material/Box";
import Toolbar from "@mui/material/Toolbar";
import Typography from "@mui/material/Typography";
import Button from "@mui/material/Button";
import IconButton from "@mui/material/IconButton";
import Logo from "../Images/logo.png";
import { Link, useNavigate, useLocation } from "react-router-dom";
import { AuthContext } from "../Context/AuthContext";
// import compose from "../Images/compose.png";
import { useMediaQuery, useTheme } from "@mui/material";
import MenuIcon from '@mui/icons-material/Menu';
import Drawer from '@mui/material/Drawer';
import List from '@mui/material/List';
import ListItem from "@mui/material/ListItem";
import ListItemButton from "@mui/material/ListItemButton";
import ListItemText from "@mui/material/ListItemText";
import Divider from "@mui/material/Divider";
import TextField from "@mui/material/TextField";
import InputAdornment from '@mui/material/InputAdornment';
import SearchIcon from '@mui/icons-material/Search';
import AccountCircleIcon from '@mui/icons-material/AccountCircle';
import MenuItem from '@mui/material/MenuItem';
import MuiMenu from '@mui/material/Menu';

// Subtler Icons for the dropdown/drawer
import AddIcon from '@mui/icons-material/Add';
import DescriptionOutlinedIcon from '@mui/icons-material/DescriptionOutlined';
import ExitToAppIcon from '@mui/icons-material/ExitToApp';
import LockOpenOutlinedIcon from '@mui/icons-material/LockOpenOutlined';

function Navbar() {
    const navigate = useNavigate();
    const location = useLocation();
    const { currentUser, logout } = React.useContext(AuthContext);
    const theme = useTheme();
    const isMobile = useMediaQuery(theme.breakpoints.down('md'));
    const isLargeScreen = useMediaQuery(theme.breakpoints.up('lg'));

    const [drawerOpen, setDrawerOpen] = React.useState(false);
    const [searchQuery, setSearchQuery] = React.useState('');
    const [showSearchBar, setShowSearchBar] = React.useState(false);
    const [anchorElUser, setAnchorElUser] = React.useState(null);

    React.useEffect(() => {
        const params = new URLSearchParams(location.search);
        setSearchQuery(params.get('search') || '');
    }, [location.search]);

    const handleDrawerToggle = () => {
        setDrawerOpen(!drawerOpen);
    };

    const handleSearchChange = (event) => {
        setSearchQuery(event.target.value);
    };

    const handleSearchSubmit = (event) => {
        if (event.key === 'Enter' || event.type === 'click') {
            if (searchQuery) {
                navigate(`/?search=${searchQuery}`);
            } else {
                navigate('/');
            }
            if (!isLargeScreen) {
                setShowSearchBar(false);
            }
            if (isMobile) {
                setDrawerOpen(false);
            }
        }
    };

    const handleOpenUserMenu = (event) => {
        setAnchorElUser(event.currentTarget);
    };

    const handleCloseUserMenu = () => {
        setAnchorElUser(null);
    };

    const handleMyPostsClick = () => {
        navigate("/my-posts");
        handleCloseUserMenu();
    };

    const handleNewPostClick = () => {
        navigate("/write");
        handleCloseUserMenu();
    };

    const primaryNavItems = [
    { name: "🏠 Home", path: "/" },
    { name: "✈️ Travel", path: "/?cat=windows" },
    { name: "💻 Tech", path: "/?cat=android" },
    { name: "📰 News", path: "/?cat=ios" },
    { name: "🩺 Health", path: "/?cat=macos" },
    { name: "💼 Career", path: "/?cat=linux" },
];


    const handleLogout = () => {
        logout();
        navigate("/login");
        handleCloseUserMenu();
    };

    const drawer = (
        <Box onClick={handleDrawerToggle} sx={{ textAlign: 'center', py: 2 }}>
            <Typography variant="h6" sx={{ my: 2, color: 'black', fontWeight: 'bold' }}>
                Navigation
            </Typography>
            <Divider />
            <List>
                {primaryNavItems.map((item) => (
                    <ListItem key={item.name} disablePadding>
                        <ListItemButton component={Link} to={item.path} sx={{ textAlign: 'center', '&:hover': { backgroundColor: theme.palette.action.hover } }}>
                            <ListItemText primary={item.name} primaryTypographyProps={{ fontSize: '1rem', fontWeight: 'medium' }} />
                        </ListItemButton>
                    </ListItem>
                ))}
                {currentUser && (
                    <>
                        <ListItem disablePadding>
                            <ListItemButton onClick={handleNewPostClick} sx={{ textAlign: 'center', '&:hover': { backgroundColor: theme.palette.action.hover } }}>
                                <AddIcon sx={{ mr: 1, color: theme.palette.primary.main }} />
                                <ListItemText primary="NEW POST" primaryTypographyProps={{ fontSize: '1rem', fontWeight: 'medium', color: theme.palette.primary.main }} />
                            </ListItemButton>
                        </ListItem>
                        <ListItem disablePadding>
                            <ListItemButton onClick={handleMyPostsClick} sx={{ textAlign: 'center', '&:hover': { backgroundColor: theme.palette.action.hover } }}>
                                <DescriptionOutlinedIcon sx={{ mr: 1, color: theme.palette.primary.main }} />
                                <ListItemText primary="MY POSTS" primaryTypographyProps={{ fontSize: '1rem', fontWeight: 'medium', color: theme.palette.primary.main }} />
                            </ListItemButton>
                        </ListItem>
                    </>
                )}
                <Divider sx={{ my: 1 }} />
                <ListItem disablePadding>
                    <ListItemButton onClick={currentUser ? handleLogout : () => navigate('/login')} sx={{ textAlign: 'center', '&:hover': { backgroundColor: theme.palette.action.hover } }}>
                        {currentUser ? (
                            <ExitToAppIcon sx={{ mr: 1, color: theme.palette.error.main }} />
                        ) : (
                            <LockOpenOutlinedIcon sx={{ mr: 1, color: theme.palette.success.main }} />
                        )}
                        <ListItemText primary={currentUser ? "LOGOUT" : "LOGIN"} primaryTypographyProps={{ fontSize: '1rem', fontWeight: 'medium', color: currentUser ? theme.palette.error.main : theme.palette.success.main }} />
                    </ListItemButton>
                </ListItem>
                {currentUser && (
                    <ListItem>
                        <ListItemText primary={`Welcome ${currentUser.username}!`} sx={{ textAlign: 'center', fontStyle: 'italic', color: theme.palette.text.secondary }} />
                    </ListItem>
                )}
            </List>
            <Box sx={{ p: 2 }}>
                <TextField
                    fullWidth
                    variant="outlined"
                    size="small"
                    placeholder="Search posts..."
                    value={searchQuery}
                    onChange={handleSearchChange}
                    onKeyDown={handleSearchSubmit}
                    InputProps={{
                        startAdornment: (
                            <InputAdornment position="start">
                                <SearchIcon color="action" />
                            </InputAdornment>
                        ),
                        endAdornment: (
                            <InputAdornment position="end">
                                <IconButton
                                    aria-label="submit search"
                                    onClick={handleSearchSubmit}
                                    edge="end"
                                    size="small"
                                >
                                    <SearchIcon />
                                </IconButton>
                            </InputAdornment>
                        ),
                        style: { borderRadius: '25px', backgroundColor: '#f0f0f0', paddingLeft: '10px' },
                    }}
                    sx={{
                        '& .MuiOutlinedInput-root': {
                            borderRadius: '25px',
                            '& fieldset': {
                                borderColor: 'transparent',
                            },
                            '&:hover fieldset': {
                                borderColor: 'transparent',
                            },
                            '&.Mui-focused fieldset': {
                                borderColor: theme.palette.primary.main,
                            },
                        },
                    }}
                />
            </Box>
        </Box>
    );

    return (
        <div>
            <Box sx={{ flexGrow: 1 }}>
                <AppBar position="static" sx={{ backgroundColor: "black", padding: { xs: "10px", md: "15px" }, color: "white" }} elevation={0}>
                    <Toolbar sx={{ justifyContent: 'space-between', alignItems: 'center', minHeight: '64px !important', gap: { xs: 0, md: '10px' } }}>
                        <Link to="/">
                            <img
                                style={{ height: isMobile ? "45px" : "60px", cursor: "pointer", transition: 'height 0.3s ease-in-out' }}
                                src={Logo}
                                alt="Blog Logo"
                            />
                        </Link>

                        {isMobile ? (
                            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
                                {currentUser && (
                                    <Typography variant="body2" sx={{ fontSize: { xs: '0.75rem', sm: '0.9rem' }, pr: 1, color: 'rgba(255,255,255,0.8)' }}>
                                        Hi, {currentUser.username}!
                                    </Typography>
                                )}
                                <IconButton
                                    color="inherit"
                                    aria-label="open drawer"
                                    edge="end"
                                    onClick={handleDrawerToggle}
                                    sx={{ ml: 1 }}
                                >
                                    <MenuIcon sx={{ fontSize: '2rem' }} />
                                </IconButton>
                            </Box>
                        ) : (
                            <>
                                {/* Central Navigation Items */}
                                <Box sx={{ display: "flex", gap: { md: "1vw", lg: "1.5vw" }, justifyContent: "center", mx: 'auto' }}>
                                    {primaryNavItems.map((item) => (
                                        <Button
                                            key={item.name}
                                            component={Link}
                                            to={item.path}
                                            sx={{
                                                color: "white",
                                                fontWeight: 'bold',
                                                fontSize: { md: '0.9rem', lg: '1rem' },
                                                whiteSpace: 'nowrap',
                                                minWidth: 'auto',
                                                px: { md: '8px', lg: '12px' },
                                                '&:hover': {
                                                    color: theme.palette.primary.light,
                                                    textDecoration: 'underline',
                                                    textUnderlineOffset: '4px',
                                                    backgroundColor: 'transparent'
                                                },
                                                transition: 'all 0.3s ease'
                                            }}
                                        >
                                            {item.name}
                                        </Button>
                                    ))}
                                </Box>

                                {/* Right Section: Search, User Info, Write, Auth Buttons */}
                                <Box sx={{ display: "flex", alignItems: "center", gap: { md: "10px", lg: "15px" } }}>
                                    {/* Search Toggle / Input */}
                                    {showSearchBar && !isMobile ? (
                                        <TextField
                                            variant="outlined"
                                            size="small"
                                            placeholder="Search..."
                                            value={searchQuery}
                                            onChange={handleSearchChange}
                                            onKeyDown={handleSearchSubmit}
                                            InputProps={{
                                                startAdornment: (
                                                    <InputAdornment position="start">
                                                        <SearchIcon sx={{ color: 'rgba(255,255,255,0.7)' }} />
                                                    </InputAdornment>
                                                ),
                                                style: { color: 'white', borderRadius: '20px', paddingLeft: '5px' },
                                            }}
                                            sx={{
                                                width: '160px',
                                                '& .MuiOutlinedInput-root': {
                                                    borderRadius: '20px',
                                                    backgroundColor: 'rgba(255,255,255,0.1)',
                                                    '& fieldset': {
                                                        borderColor: 'transparent',
                                                    },
                                                    '&:hover fieldset': {
                                                        borderColor: 'rgba(255,255,255,0.5)',
                                                    },
                                                    '&.Mui-focused fieldset': {
                                                        borderColor: 'white',
                                                    },
                                                },
                                                '& .MuiInputBase-input::placeholder': {
                                                    color: 'rgba(255,255,255,0.7)',
                                                    opacity: 1,
                                                },
                                            }}
                                            autoFocus
                                        />
                                    ) : (
                                        <IconButton
                                            color="inherit"
                                            onClick={() => setShowSearchBar(true)}
                                            sx={{ p: '8px' }}
                                        >
                                            <SearchIcon sx={{ fontSize: '1.8rem', color: 'rgba(255,255,255,0.9)' }} />
                                        </IconButton>
                                    )}

                                    {currentUser ? (
                                        <>
                                            <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>
                                                <AccountCircleIcon sx={{ fontSize: '2.5rem', color: 'white' }} />
                                            </IconButton>
                                            <MuiMenu
                                                sx={{ mt: '45px' }}
                                                id="menu-appbar"
                                                anchorEl={anchorElUser}
                                                anchorOrigin={{
                                                    vertical: 'top',
                                                    horizontal: 'right',
                                                }}
                                                keepMounted
                                                transformOrigin={{
                                                    vertical: 'top',
                                                    horizontal: 'right',
                                                }}
                                                open={Boolean(anchorElUser)}
                                                onClose={handleCloseUserMenu}
                                            >
                                                <MenuItem onClick={handleMyPostsClick}>
                                                    <DescriptionOutlinedIcon sx={{ mr: 1 }} />
                                                    <Typography textAlign="center">My Posts</Typography>
                                                </MenuItem>
                                                <MenuItem onClick={handleNewPostClick}>
                                                    <AddIcon sx={{ mr: 1 }} />
                                                    <Typography textAlign="center">New Post</Typography>
                                                </MenuItem>
                                                <MenuItem onClick={handleLogout}>
                                                    <ExitToAppIcon sx={{ mr: 1, color: 'error.main' }} />
                                                    <Typography textAlign="center" color="error">Logout</Typography>
                                                </MenuItem>
                                            </MuiMenu>
                                        </>
                                    ) : (
                                        <Button
                                            color="inherit"
                                            sx={{
                                                border: "2px solid white",
                                                borderRadius: '25px',
                                                padding: '8px 20px',
                                                '&:hover': {
                                                    borderColor: theme.palette.success.light,
                                                    backgroundColor: 'rgba(0, 255, 0, 0.1)',
                                                    color: theme.palette.success.light
                                                },
                                                transition: 'all 0.3s ease',
                                                textTransform: 'uppercase',
                                                whiteSpace: 'nowrap'
                                            }}
                                            variant="outlined"
                                            onClick={() => { navigate('/login') }}
                                        >
                                            Login
                                        </Button>
                                    )}
                                </Box>
                            </>
                        )}
                    </Toolbar>
                </AppBar>
            </Box>
            <nav>
                <Drawer
                    variant="temporary"
                    open={drawerOpen}
                    onClose={handleDrawerToggle}
                    ModalProps={{
                        keepMounted: true,
                    }}
                    anchor="right" 
                    sx={{
                        display: { xs: 'block', md: 'none' },
                        '& .MuiDrawer-paper': { boxSizing: 'border-box', width: 240, backgroundColor: theme.palette.background.default },
                    }}
                >
                    {drawer}
                </Drawer>
            </nav>
        </div>
    );
}

export default Navbar;.
===== E:\0other imp\SideProjects\blogging_project\React-MySQL-Blog-App\Client\src\Context\AuthContext.js ===== 
import axios from 'axios';
import {createContext} from 'react';
import { useEffect,useState } from 'react';
import { useNavigate } from 'react-router-dom';
export const AuthContext = createContext()


export const AuthContextProvider = ({children})=>{
    const [currentUser, setcurrentUser] = useState(JSON.parse(localStorage.getItem('user')|| null))
    const login = async(inputs)=>{
        const res = await axios.post("auth/login",inputs)
        setcurrentUser(res.data)
    }
    const logout = async(inputs)=>{
        const res = await axios.post("http://localhost:3000/auth/logout")
        setcurrentUser(null);
        localStorage.clear();
        window.location.href = "/"
    }



    useEffect(() => {
        localStorage.setItem('user',JSON.stringify(currentUser))
    }, [currentUser]);

    return (
        <AuthContext.Provider value={{currentUser,login,logout}} >
            {children}
            </AuthContext.Provider>
    )
    
}.
===== E:\0other imp\SideProjects\blogging_project\React-MySQL-Blog-App\Client\src\Pages\Style.css ===== 
..
===== E:\0other imp\SideProjects\blogging_project\React-MySQL-Blog-App\Client\src\Pages\Home.js ===== 
import React, { useEffect, useState } from "react";
import { Link, useLocation } from "react-router-dom";
import axios from "axios";
import {
  Box,
  Button,
  Card,
  CardActions,
  CardContent,
  CardMedia,
  Grid,
  Typography,
  Container,
  Stack,
  CardActionArea,
  Fab,
} from "@mui/material";
import AddIcon from '@mui/icons-material/Add';
import moment from "moment";

function Home() {
  const [posts, setposts] = useState([]);
  const location = useLocation();
  const queryParams = location.search;
  const [isHovered, setIsHovered] = useState(false);

  const fabBottom = { xs: 48, md: 70 };
  const fabRight = { xs: 56, md: 80 };

  useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await axios.get(`/posts${queryParams}`);
        setposts(response.data);
      } catch (error) {
        console.log(error);
      }
    };
    fetchData();
  }, [location.search, location.key]);

  return (
    <div>
      <Container maxWidth="lg" sx={{ py: 4 }}>
        <Stack sx={{ mb: 4 }}>
          <Typography
            variant="h4"
            component="h1"
            sx={{
              fontFamily: "poppins",
              fontWeight: "500",
              fontSize: { xs: '1.8rem', sm: '2rem', md: '2.5rem' },
              cursor: "default",
              marginTop: "25px",
              textAlign: 'center',
              color: '#333',
            }}
          >
            Latest Blog Posts
          </Typography>
        </Stack>

        <Box sx={{ flexGrow: 1 }}>
          <Grid container spacing={{ xs: 2, md: 3 }} justifyContent="center">
            {posts.map((value) => (
              <Grid
                item
                key={value.id}
                xs={12}
                sm={6}
                md={4}
                lg={3}
                sx={{ display: 'flex', justifyContent: 'center' }}
              >
                <Card sx={{
                  width: "100%",
                  maxWidth: 345,
                  display: 'flex',
                  flexDirection: 'column',
                  borderRadius: '8px',
                  boxShadow: '0 4px 12px rgba(0,0,0,0.1)',
                  transition: 'transform 0.3s ease-in-out',
                  '&:hover': {
                    transform: 'translateY(-5px)',
                    boxShadow: '0 6px 16px rgba(0,0,0,0.15)',
                  }
                }} elevation={2}>
                  <CardActionArea component={Link} to={`/post/${value.id}`}>
                    <CardMedia
                      component="img"
                      image={value.img || 'https://placehold.co/600x400/EEEEEE/333333?text=No+Image'}
                      alt={value.title}
                      sx={{ height: 200, objectFit: 'cover' }}
                    />
                    <CardContent sx={{ flexGrow: 1 }}>
                      <Typography
                        gutterBottom
                        variant="h6"
                        component="div"
                        sx={{
                          fontWeight: 'bold',
                          minHeight: '3em',
                          overflow: 'hidden',
                          textOverflow: 'ellipsis',
                          display: '-webkit-box',
                          WebkitLineClamp: 2,
                          WebkitBoxOrient: 'vertical',
                        }}
                      >
                        {value.title}
                      </Typography>

                      <Typography variant="body2" color="text.secondary" sx={{
                        minHeight: '4.5em',
                        overflow: 'hidden',
                        textOverflow: 'ellipsis',
                        display: '-webkit-box',
                        WebkitLineClamp: 3,
                        WebkitBoxOrient: 'vertical',
                      }}>
                        <div dangerouslySetInnerHTML={{ __html: value.desc ? value.desc.substring(0, 150) + '...' : 'No description available.' }} />
                      </Typography>
                    </CardContent>
                  </CardActionArea>

                  <CardActions sx={{ justifyContent: 'space-between', p: 2, borderTop: '1px solid #eee' }}>
                    <Button size="small" sx={{ color: theme => theme.palette.text.secondary, fontSize: '0.75rem' }}>
                      {moment(value.date).fromNow()}
                    </Button>
                    <Button size="small" sx={{ color: theme => theme.palette.primary.main, fontWeight: 'medium', fontSize: '0.75rem' }}>
                      {value.username}
                    </Button>
                  </CardActions>
                </Card>
              </Grid>
            ))}
          </Grid>
        </Box>
      </Container>

      <Fab
        aria-label="add"
        component={Link}
        to="/write"
        sx={{
          position: 'fixed',
          bottom: fabBottom,
          right: fabRight,
          backgroundColor: '#ffffff',
          color: '#000000',
          borderRadius: '50%',
          boxShadow: '0 4px 12px rgba(0,0,0,0.2)',
          border: '1px solid #e0e0e0',
          transition: 'background-color 0.3s ease-in-out, transform 0.2s ease-in-out, box-shadow 0.3s ease-in-out',
          zIndex: 1001,
          '&:hover': {
            backgroundColor: '#f5f5f5',
            boxShadow: '0 6px 16px rgba(0,0,0,0.3)',
            transform: 'scale(1.05)',
          },
          '&:active': {
            transform: 'scale(0.95)',
          },
        }}
        onMouseEnter={() => setIsHovered(true)}
        onMouseLeave={() => setIsHovered(false)}
      >
        <AddIcon />
      </Fab>

      <Typography
        variant="caption"
        sx={{
          position: 'fixed',
          right: fabRight,
          bottom: {
            xs: `calc(${fabBottom.xs}px - 40px)`,
            md: `calc(${fabBottom.md}px - 40px)`
          },
          transform: isHovered ? 'translate(-50%, 0px)' : 'translate(-50%, -10px)',
          backgroundColor: 'rgba(0, 0, 0, 0.8)',
          color: '#ffffff',
          px: 1,
          py: 0.5,
          borderRadius: '4px',
          whiteSpace: 'nowrap',
          pointerEvents: 'none',
          opacity: isHovered ? 1 : 0,
          transition: 'opacity 0.2s ease-in-out, transform 0.2s ease-in-out',
          zIndex: 1000,
        }}
      >
        New Post
      </Typography>
    </div>
  );
}

export default Home;
..
===== E:\0other imp\SideProjects\blogging_project\React-MySQL-Blog-App\Client\src\Pages\Login.js ===== 
import * as React from "react";
import Box from "@mui/material/Box";
import Stack from "@mui/material/Stack";
import Container from "@mui/material/Container";
import { Button, TextField } from "@mui/material";
import "./Style.css";
import { useNavigate } from "react-router";
import axios from "axios"
import { ToastContainer, toast } from 'react-toastify';
import { useState } from "react";
import { AuthContext } from "../Context/AuthContext";




function Login() {
  const navigate = useNavigate();
  const [inputs, setinputs] = useState({
    username: "",
    password: "",
  });

  const {login} = React.useContext(AuthContext);
  const handleChange = (e) => {
    setinputs(prev=>({ ...prev, [e.target.name]: e.target.value }));
  };

  const handleLogin = async(e)=>{
    e.preventDefault()
    try {
      const resp = await login(inputs)
      
      toast.success("Logged In !", {
      });   
      setTimeout(() => {
        navigate("/")
      }, 2000); 
    } catch (error) {
      console.log("Error -----> ",error);
      if(error.response.data==="User Already Exists"){
        toast.error("User Already Exists !", {
        });
      }

      if(error.response.data==="Wrong Username Or Password"){
        toast.error("Wrong Username or Password !", {
      }); 
      }
    }
  }
  return (
    <>
      {/* Left Side */}
      <div>
        <Box sx={{ width: "100%" }}>
          <Stack direction={"row"} spacing={2}>
            <Container maxWidth="m">
              <Box sx={{ height: "100%", marginTop: "8vh" }}>
                <h1
                  style={{
                    fontFamily: "poppins",
                    fontWeight: "300",
                    fontSize: "3vw",
                    marginLeft: "25px",
                    cursor: "default",

                  }}
                >
                  Login To Get Started.
                </h1>

                <Container
                  maxWidth="m"
                  sx={{
                    display: "flex",
                    flexDirection: "column",
                    marginTop: "3vh",
                    padding: "15px",
                  }}
                >
                  <h1
                    style={{
                      fontFamily: "poppins",
                      fontWeight: "200",
                      cursor: "default",
                    }}
                  >
                    {" "}
                    Username
                  </h1>
                  <TextField
                    id="outlined-basic"
                    variant="standard"
                    placeholder="  Enter Username"
                    InputProps={{
                      disableUnderline: true,
                      color: "black",
                    }}
                    sx={{
                      input: {
                        color: "black",
                        border: "3px solid black",
                        borderRadius: "2vh",
                        padding: "8px 15px",
                      },
                    }}
                    name="username"
                    onChange={handleChange}
                    autoComplete="off"
                    style={{
                      margin: "2px 0px",
                      width: "20vw",
                    }}
                  />

                  <h1
                    style={{
                      fontFamily: "poppins",
                      fontWeight: "200",
                      marginTop: "3vh",
                      border: "none",
                      cursor: "default",
                    }}
                  >
                    {" "}
                    Password
                  </h1>
                  <TextField
                    id="outlined-basic"
                    variant="standard"
                    placeholder="  Enter Password"
                    InputProps={{
                      disableUnderline: true,
                      color: "black",
                    }}
                    sx={{
                      input: {
                        color: "black",
                        border: "3px solid black",
                        borderRadius: "2vh",
                        padding: "8px 15px",
                      },
                    }}
                    name="password"
                    onChange={handleChange}
                    autoComplete="off"
                    style={{
                      margin: "2px 0px",
                      width: "20vw",
                    }}
                  />
                  <h4
                    style={{
                      color: "gray",
                      fontFamily: "poppins",
                      fontWeight: "200",
                      marginTop: "1vh",
                      cursor: "pointer",
                      fontStyle: "italic",
                      textDecoration: "underline",
                    }}
                    onClick={() => navigate("/register")}
                  >
                    Create An Account
                  </h4>

                  <Button
                    style={{
                      marginTop: "2vw",
                      width: "20vw",
                      backgroundColor: "black",
                    }}
                    variant="contained"
                    onClick={handleLogin}
                  >
                    Sign-In
                  </Button>
                </Container>
                <div></div>
              </Box>
            </Container>
          </Stack>
        </Box>
        
      </div>
      <ToastContainer />

    </>
  );
}

export default Login;
..
===== E:\0other imp\SideProjects\blogging_project\React-MySQL-Blog-App\Client\src\Pages\Register.js ===== 
import * as React from "react";
import Box from "@mui/material/Box";
import Stack from "@mui/material/Stack";
import Container from "@mui/material/Container";
import { Button, TextField } from "@mui/material";
import { useNavigate } from "react-router";
import { prepareCssVars } from "@mui/system";
import { useState } from "react";
import axios from "axios"
import { ToastContainer, toast } from 'react-toastify';





function Register() {
  const navigate = useNavigate();
  const [inputs, setinputs] = useState({
    username: "",
    email: "",
    password: "",
  });


  const handleChange = (e) => {
    setinputs(prev=>({ ...prev, [e.target.name]: e.target.value }));
  };

  const handleRegister = async(e)=>{
    e.preventDefault()
    try {
      await axios.post("auth/register",inputs)
      toast.success("User Created !", {
      });   
      setTimeout(() => {
        navigate("/login")
      }, 2000); 
    } catch (error) {
      console.log("Error -----> ",error);
      if(error.response.data==="User Already Exists"){
        toast.error("User Already Exists !", {
        });
      }
    }
  }
  console.log(inputs);
  return (
    <>
      {/* Left Side */}
      <div>
        <Box sx={{ width: "100%" }}>
          <Stack direction={"row"} spacing={2}>
            <Container maxWidth="m">
              <Box sx={{ height: "100%", marginTop: "8vh" }}>
                <h1
                  style={{
                    fontFamily: "poppins",
                    fontWeight: "300",
                    fontSize: "3vw",
                    marginLeft: "25px",
                    cursor: "default",
                  }}
                >
                  Create Your Free Account!
                </h1>

                <Container
                  maxWidth="m"
                  sx={{
                    display: "flex",
                    flexDirection: "column",
                    marginTop: "2vh",
                    padding: "15px",
                  }}
                >
                  <h1
                    style={{
                      fontFamily: "poppins",
                      fontWeight: "200",
                      cursor: "default",
                    }}
                  >
                    {" "}
                    Username
                  </h1>
                  <TextField
                    id="outlined-basic"
                    variant="standard"
                    placeholder="  Enter Username"
                    InputProps={{
                      disableUnderline: true,
                      color: "black",
                    }}
                    name="username"
                    onChange={handleChange}
                    sx={{
                      input: {
                        color: "black",
                        border: "3px solid black",
                        borderRadius: "2vh",
                        padding: "8px 15px",
                      },
                    }}
                    autoComplete="off"
                    style={{
                      margin: "2px 0px",
                      width: "20vw",
                    }}
                  />

                  <h1
                    style={{
                      fontFamily: "poppins",
                      fontWeight: "200",
                      marginTop: "1vh",
                      border: "none",
                      cursor: "default",
                    }}
                  >
                    {" "}
                    Email
                  </h1>
                  <TextField
                    id="outlined-basic"
                    variant="standard"
                    placeholder="  Enter Profile Image link"
                    InputProps={{
                      disableUnderline: true,
                      color: "black",
                    }}
                    name="email"
                    onChange={handleChange}
                    sx={{
                      input: {
                        color: "black",
                        border: "3px solid black",
                        borderRadius: "2vh",
                        padding: "8px 15px",
                      },
                    }}
                    autoComplete="off"
                    style={{
                      margin: "2px 0px",
                      width: "20vw",
                    }}
                  />

                  <h1
                    style={{
                      fontFamily: "poppins",
                      fontWeight: "200",
                      marginTop: "1vh",
                      border: "none",
                      cursor: "default",
                    }}
                  >
                    {" "}
                    Password
                  </h1>
                  <TextField
                    id="outlined-basic"
                    variant="standard"
                    placeholder="  Enter Password"
                    InputProps={{
                      disableUnderline: true,
                      color: "black",
                    }}
                    name="password"
                    onChange={handleChange}
                    sx={{
                      input: {
                        color: "black",
                        border: "3px solid black",
                        borderRadius: "2vh",
                        padding: "8px 15px",
                      },
                    }}
                    autoComplete="off"
                    style={{
                      margin: "2px 0px",
                      width: "20vw",
                    }}
                  />

                  {/* <h1
                    style={{
                      fontFamily: "poppins",
                      fontWeight: "200",
                      marginTop: "1vh",
                      border: "none",
                      cursor: "default",
                    }}
                  >
                    {" "}
                    Profile Image
                  </h1>
                  <TextField
                    id="outlined-basic"
                    variant="standard"
                    placeholder="  Enter Profile Image link"
                    InputProps={{
                      disableUnderline: true,
                      color: "black",
                    }}
                    sx={{
                      input: {
                        color: "black",
                        border: "3px solid black",
                        borderRadius: "2vh",
                        padding: "8px",
                      },
                    }}
                    autoComplete="off"
                    style={{
                      margin: "2px 0px",
                      width: "20vw",
                    }}
                  /> */}

                  <h4
                    style={{
                      color: "gray",
                      fontFamily: "poppins",
                      fontWeight: "200",
                      marginTop: "1vh",
                      cursor: "pointer",
                      fontStyle: "italic",
                      textDecoration: "underline",
                    }}
                    onClick={() => navigate("/login")}
                  >
                    Already Have An Account ?
                  </h4>

                  <Button
                    style={{
                      marginTop: "2vw",
                      width: "20vw",
                      backgroundColor: "black",
                    }}
                    variant="contained"
                    onClick={handleRegister}
                  >
                    Create-Account
                  </Button>
                </Container>
                <div></div>
              </Box>
            </Container>
          </Stack>
        </Box>
        <ToastContainer />
      </div>
    </>
  );
}

export default Register;
..
===== E:\0other imp\SideProjects\blogging_project\React-MySQL-Blog-App\Client\src\Pages\Single.js ===== 
import React, { useState, useEffect, useContext } from "react";
import { useLocation } from "react-router-dom";
import moment from "moment";
import axios from "axios";
import { AuthContext } from "../Context/AuthContext.js";
import { useNavigate } from "react-router";
import { ToastContainer, toast } from "react-toastify";
import { Avatar, Box, Button, Container, Stack } from "@mui/material";

function Single() {
  const [post, setPost] = useState(null);
  const location = useLocation().search;
  const pathname = window.location.pathname;
  const postId = pathname.split("/")[2];
  const { currentUser } = useContext(AuthContext);
  const navigate = useNavigate();

  const handlePostDelete = async () => {
    const currentPostId = postId.split("%")[0];
    try {
      await axios.delete(`http://localhost:3000/posts/${currentPostId}`);
      toast.success("Post Deleted Successfully");
      setTimeout(() => {
        navigate("/");
      }, 1000);
    } catch (error) {
      toast.error("Failed to delete post");
      console.log(error);
    }
  };

  const handlePostUpdate = () => {
    const currentPostId = postId.split("%")[0];
    setTimeout(() => {
      navigate(`/write`, {
        state: {
          post: post,
          postid: currentPostId,
        },
      });
    }, 1000);
  };

  useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await axios.get(`/posts/${postId}`);
        setPost(response.data);
      } catch (error) {
        console.log(error);
      }
    };
    fetchData();
  }, [postId]);

  if (!post) return <div>Loading...</div>;

  return (
    <>
      <Container
        // ADDED paddingTop (pt) HERE along with paddingBottom (pb)
        sx={{ display: "flex", alignItems: "center", flexDirection: "column", pt: 4, pb: 4 }}
      >
        <Box sx={{ display: "flex", justifyContent: "center", flexDirection: "column", alignItems: "center" }}>
          <img style={{ height: "45vh" }} src={post?.img} alt={post.title} />
          <h1>{post.title}</h1>
          <p dangerouslySetInnerHTML={{ __html: post.desc }}></p>
          <p style={{ marginTop: "1vh", fontWeight: "500" }}>
            {moment(post.date).fromNow()}
          </p>

          <p style={{ fontWeight: "500" }}>Written By : {post.username}</p>

          {currentUser && currentUser.username === post.username && (
            <Box sx={{ marginTop: "2vh" }}>
              <Button
                style={{
                  backgroundColor: "black",
                  color: "white",
                  marginRight: "1vw",
                }}
                variant="contained"
                onClick={handlePostUpdate}
              >
                Edit Post
              </Button>
              <Button
                onClick={handlePostDelete}
                color="error"
                variant="contained"
              >
                Delete Post
              </Button>
            </Box>
          )}
        </Box>
      </Container>
      <ToastContainer />
    </>
  );
}

export default Single;echo ...
===== E:\0other imp\SideProjects\blogging_project\React-MySQL-Blog-App\Client\src\Pages\Write.js ===== 
import React, { useEffect, useState } from "react";
import ReactQuill from "react-quill";
import "react-quill/dist/quill.snow.css";
import moment from "moment";
import axios from "axios";
import { useLocation, useNavigate } from "react-router-dom";
import { toast } from "react-toastify";
import { Box, Button, Container, MenuItem, Select, TextField, Typography, Paper } from "@mui/material";

function Write() {
  const navigate = useNavigate();
  const location = useLocation();

  const postIdToEdit = location?.state?.postid;
  const postEdit = location?.state?.post;

  const [categorySelect, setCategorySelect] = useState("");
  const userData = JSON.parse(localStorage.getItem("user"));

  const [inputs, setInputs] = useState({
    title: "",
    desc: "",
    img: "",
    date: null,
    uid: null,
    category: "",
  });

  // Initialize form fields when editing
  useEffect(() => {
    if (postIdToEdit && postEdit) {
      setInputs({
        title: postEdit.title || "",
        desc: postEdit.desc || "",
        img: postEdit.img || "",
        date: postEdit.date || null,
        uid: postEdit.uid || null,
        category: postEdit.category || "",
      });
      setCategorySelect(postEdit.category || "");
    }
  }, [postIdToEdit, postEdit]);

  const handleChange = (e) => {
    setInputs((prev) => ({ ...prev, [e.target.name]: e.target.value }));
  };

  const handleCategoryChange = (e) => {
    setCategorySelect(e.target.value);
    setInputs((prev) => ({ ...prev, category: e.target.value }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    const newDate = moment(Date.now()).format("YYYY-MM-DD HH:mm:ss");
    const updatedInputs = {
      ...inputs,
      date: newDate,
      uid: userData?.id,
      category: categorySelect,
    };

    try {
      if (postIdToEdit) {
        await axios.put(`/posts/${postIdToEdit}`, updatedInputs);
        toast.success("Post Updated!");
        setTimeout(() => {
          navigate(`/post/${postIdToEdit}`);
        }, 1000);
      } else {
        const res = await axios.post(`/posts`, updatedInputs);
        toast.success("Post Added!");
        setTimeout(() => {
          navigate("/");
        }, 1000);
      }
    } catch (error) {
      console.log(error);
      toast.error("Failed to save post");
    }
  };

  if (!userData) {
    return (
      <Container maxWidth="md" sx={{ mt: 4, textAlign: 'center' }}>
        <Typography variant="h5" gutterBottom>
          You need to be logged in to create or edit posts
        </Typography>
        <Button
          variant="contained"
          color="primary"
          onClick={() => navigate("/login")}
          sx={{ mt: 2 }}
        >
          Go to Login
        </Button>
      </Container>
    );
  }

  return (
    <Container maxWidth="lg" sx={{ py: 4 }}>
      <Paper elevation={3} sx={{ p: 4 }}>
        <Typography variant="h4" component="h1" gutterBottom sx={{ mb: 4 }}>
          {postIdToEdit ? "Edit Post" : "Create New Post"}
        </Typography>

        <Box component="form" onSubmit={handleSubmit}>
          <TextField
            fullWidth
            label="Title"
            variant="outlined"
            name="title"
            value={inputs.title}
            onChange={handleChange}
            required
            sx={{ mb: 3 }}
          />

          <Box sx={{ mb: 3, height: 400 }}>
            <ReactQuill
              theme="snow"
              value={inputs.desc}
              onChange={(content) => setInputs((prev) => ({ ...prev, desc: content }))}
              style={{ height: "300px" }}
              modules={{
                toolbar: [
                  [{ header: [1, 2, false] }],
                  ["bold", "italic", "underline", "strike", "blockquote"],
                  [{ list: "ordered" }, { list: "bullet" }],
                  ["link", "image"],
                  ["clean"],
                ],
              }}
            />
          </Box>

          <TextField
            fullWidth
            label="Image URL"
            variant="outlined"
            name="img"
            value={inputs.img}
            onChange={handleChange}
            sx={{ mb: 3 }}
          />

          <Select
            fullWidth
            value={categorySelect}
            onChange={handleCategoryChange}
            displayEmpty
            sx={{ mb: 3 }}
          >
            <MenuItem value="" disabled>
              Select Category
            </MenuItem>
            <MenuItem value="Travel">Travel</MenuItem>
            <MenuItem value="Tech">Tech</MenuItem>
            <MenuItem value="News">News</MenuItem>
            <MenuItem value="Health">Health</MenuItem>
            <MenuItem value="Career">Career</MenuItem>
          </Select>

          <Box sx={{ display: 'flex', justifyContent: 'flex-end', gap: 2 }}>
            <Button
              variant="outlined"
              color="secondary"
              onClick={() => navigate(-1)}
            >
              Cancel
            </Button>
            <Button
              type="submit"
              variant="contained"
              color="primary"
              size="large"
            >
              {postIdToEdit ? "Update Post" : "Publish Post"}
            </Button>
          </Box>
        </Box>
      </Paper>
    </Container>
  );
}

export default Write;echo ...
